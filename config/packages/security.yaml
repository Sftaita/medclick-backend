security:
  encoders:
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    registration:
      pattern: ^/api/users
      anonymous: true
      stateless: true
      methods: [POST]

    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true

      user_checker: App\Security\UserChecker
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      anonymous: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

    main:
      anonymous: true
      lazy: true
      provider: app_user_provider

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/autre, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/terms-conditions, roles: IS_AUTHENTICATED_ANONYMOUSLY,  methods: [GET]  }
    - { path: ^/api/marketing/active, roles: IS_AUTHENTICATED_ANONYMOUSLY }

    - { path: ^/api/years, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/excel, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/favorites, roles: IS_AUTHENTICATED_FULLY }
    #- { path: ^/api/list, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/consultations, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/formations, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/gardes, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/surgeons, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/surgeries, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/userStat, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/statistics, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/acceptTerms, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/connectionHistory, roles: IS_AUTHENTICATED_FULLY }
    - { path: "^/api/admin", roles: ROLE_ADMIN, methods: [GET, PUT, DELETE, POST] }
    - {
        path: ^/api/users,
        roles: IS_AUTHENTICATED_FULLY,
        methods: [GET, PUT, DELETE],
      }
    #  - { path: '^/admin', roles: ROLE_ADMIN }
